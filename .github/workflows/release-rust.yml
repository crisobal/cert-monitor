name: Rust-Release

on:
  workflow_dispatch:

  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    strategy:
      matrix:
        platform:
          - os_name: Linux-x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl

          - os_name: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin

          - os_name: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc


    runs-on: ${{ matrix.platform.os }}

    name: Release on multiple os

    steps:
      - uses: actions/checkout@v4
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: "build"
          target: ${{ matrix.platform.target }}
          toolchain: stable
          args: "--locked --release"
          strip: true
          cross-version: 107433fa9d71d7eb506cd5bf5467bab89edb7a52
      - name: Publish artifacts and release
        uses: houseabsolute/actions-rust-release@v0
        with:
          executable-name: cert-monitor
          target: ${{ matrix.platform.target }}
          action-gh-release-parameters: |
            {                
                "make_latest" : "true",
                "_force-release-for-testing" : "true"                
            }
      - name: Parse `action-gh-release-parameters` and set inputs for `softprops/action-gh-release`
        id: action-gh-release-parameters
        shell: bash
        run: |
          set -e
          set -x
          set -o pipefail

          FAKE_TAG=""
          if [ -n "${{ inputs._force-release-for-testing }}" ]; then
              workflow_ref="${{ github.workflow_ref }}"
              workflow_path="${workflow_ref%%@*}"
              workflow_file=$(basename "$workflow_path")
              timestamp=$( TZ=UTC git log -1 --format=%cd --date=format-local:%Y-%m-%dT%H-%M-%S )
              FAKE_TAG="v-$timestamp-${{ github.ref_name }}-${{ github.sha }}-${{ github.run_number }}-$workflow_file"
          fi
          # This will get the inputs JSON from the `ACTION_GH_RELEASE_PARAMETERS` env var. This avoids
          # any string interpolation issues, since the inputs will contain quotes.
          parse-and-set-action-gh-release-parameters.py \
              --working-directory "${{ inputs.working-directory }}" \
              --archive-file "${{ steps.package-archive.outputs.archive-file }}" \
              --changes-file "${{ inputs.changes-file }}" \
              --fake-tag "$FAKE_TAG"
        env:
          ACTION_GH_RELEASE_PARAMETERS: ${{ inputs.action-gh-release-parameters }}
        if: ( github.ref_type == 'tag' && startsWith( github.ref_name, inputs.release-tag-prefix ) ) || inputs._force-release-for-testing

      - name: Publish GitHub release
        uses: softprops/action-gh-release@v2
        with: ${{ steps.action-gh-release-parameters.outputs }}
        if: ( github.ref_type == 'tag' && startsWith( github.ref_name, inputs.release-tag-prefix ) ) || inputs._force-release-for-testing

      
